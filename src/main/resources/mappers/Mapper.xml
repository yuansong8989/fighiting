<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springys.Dao.MainDao">
    <resultMap id="mmm" type="com.springys.entity.Aj">
        <result property="dbserver_config_id" column="dbserver_config_id"/>
        <result property="id" column="id"/>
        <result property="alias" column="alias"/>
        <result property="config" column="config"/>
        <result property="db_name" column="db_name"/>
        <result property="db_type_id" column="db_type_id"/>
        <result property="repository_id" column="repository_id"/>
    </resultMap>
    <select id="getDataBaseList" resultMap="mmm">
    SELECT
    dbserver_config_id,
    id,
    alias,
    config,
    db_name,
    db_type_id,
    repository_id
    FROM db
</select>
    <insert id="exitDatabase">
    INSERT INTO db (config,db_name,repository_id,dbserver_config_id,db_type_id,alias,create_time)
    VALUES (#{config},#{db_name},#{repository_id},#{dbserver_config_id},#{db_type_id},#{alias},#{create_time})
</insert>
    <resultMap id="nnn" type="com.springys.entity.SelectPassword">
        <!--<result propertdelete id="deleteDatabase">-->
            <!--DELETE FROM db WHERE id=#{id}-->
        <!--</delete>y="create_time" column="create_time"/>-->
        <result property="id" column="id"/>
        <result property="password" column="password"/>
        <result property="update_time" column="update_time"/>
    </resultMap>
    <select id="login" resultMap="nnn">
        SELECT * FROM password AS a WHERE a.password=#{password}
    </select>
    <resultMap id="user1" type="com.springys.entity.BigData">
        <result property="plantform_val" column="plantform_val"/>
        <result property="platform_id" column="platform_id"/>
        <result property="platform_name" column="platform_name"/>
    </resultMap>
    <select id="Sinformation" resultMap="user1">
SELECT * FROM plantform_config WHERE platform_name=#{user}
    </select>
    <resultMap id="page" type="com.springys.entity.Students">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="uid" property="uid"/>
    </resultMap>
    <select id="pageSelect" resultMap="page">
     SELECT * FROM student WHERE uid=#{id}
    </select>
    <resultMap id="file" type="com.springys.entity.Students">
        <!--<id column="id" property="id"/>-->
        <result property="file_url" column="file_url"/>
    </resultMap>
    <select id="selectUrl" resultMap="file">
        SELECT * FROM student WHERE id=#{number}
    </select>
    <delete id="delete">
        DELETE FROM student WHERE id=#{id}
    </delete>
    <resultMap id="lyb" type="com.springys.entity.Students">
        <result property="file_url" column="file_url"/>
    </resultMap>
    <select id="ClearSelect" resultMap="lyb">
        SELECT * FROM student WHERE  student.file_url LIKE concat('%',#{filename},'%')
    </select>
    <insert id="InsertFileName">
        INSERT INTO student (file_url) VALUES (#{filename})
    </insert>
    <resultMap id="classify" type="com.springys.entity.Students">
        <result property="file_url" column="file_url"/>
    </resultMap>
    <select id="classifySelect" resultMap="classify">
        SELECT *  FROM student,classify WHERE classify.classifyid=student.uid AND classify.classifyid=#{classify}
    </select>
    <insert id="addClassify">
INSERT  into classify (classify.classifyname) VALUES
<foreach collection="classList" item="classify" separator=",">
    (
    #{classify.classifyname}
    )
</foreach>
    </insert>
    <update id="fileClassify">
        UPDATE student SET uid=#{fileuid} where id=#{fileid1}
    </update>
    <select id="selectCount" resultType="int">
        SELECT count(file_url) FROM student WHERE student.file_url is NOT NULL AND uid=#{id}
</select>
    <update id="updatetime">
        UPDATE student SET file_url=#{name} WHERE id=#{id}
    </update>
    <update id="updatetime1"  >
        UPDATE student SET update_time=#{date} WHERE id=#{id}
</update>
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require}
                <if test="req.value != null"> #{req.value}</if>
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=",">
                        #{val}
                    </foreach>
                </if>
                <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>
<sql id="selectStudents">
student.id as id,
student.file_url as file_url,
student.uid as uid,
student.password as password,
student.name as name
</sql>
    <resultMap id="selectStudents" type="com.springys.entity.Students">
        <result property="id" column="id"/>
        <result property="file_url" column="file_url"/>
        <result property="uid" column="uid"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
    </resultMap>
    <!--用户管理模块-->
    <sql id="User">
        user.id as id,
        user.username as username,
        user.password as password,
        user.email as email,
        user.grade as grade,
        user.safeindex as safeindex,
        user.banlogin as banlogin,
        user.studentid as studentid,
        user.newsnum as newsnum,
        user.discussnum as discussnum,
        user.seenum as seenum,
        user.createtime as createtime,
        user.lastlogintime as lastlogintime,
        user.role as role
    </sql>
    <resultMap id="result_user" type="com.springys.entity.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result property="grade" column="grade"/>
        <result property="safeindex" column="safeindex"/>
        <result property="studentid" column="studentid"/>
        <result property="banlogin" column="banlogin"/>
        <result property="lastlogintime" column="lastlogintime"/>
        <result property="createtime" column="createtime"/>
        <result property="newsnum" column="newsnum"/>
        <result property="seenum" column="seenum"/>
        <result property="discussnum" column="discussnum"/>
        <result property="role" column="role"/>
    </resultMap>
    <select id="selectUser" parameterType="com.springys.Common.Assist"  resultMap="result_user">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
                <include refid="User" />
            </otherwise>
        </choose>
        from user
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM user
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                </choose>
                ) as tmp
                on tmp.primary_key=script.id
            </otherwise>
        </choose>
    </select>
    <!--返回用户条数-->
    <select id="userCount" resultType="int">
        SELECT count(username) FROM user WHERE user.username is NOT NULL
    </select>
    <select id="newsCount" resultType="int">
        SELECT count(message) FROM allnews WHERE allnews.message is NOT NULL
    </select>
    <!--批量删除用户-->
    <delete id="deleteUser" parameterType="arraylist">
        DELETE FROM user WHERE id in
        <foreach collection="list" open="(" close=")" separator="," item="id" >
            #{id}
        </foreach>
    </delete>
    <!--批量修改用户权限-->
    <update id="updateBanLogin" parameterType="com.springys.entity.User">
        UPDATE user set user.banlogin=#{user.banlogin},user.password=#{user.password},user.safeindex=#{user.safeindex},user.email=#{user.email},user.username=#{user.username} WHERE user.id=#{user.id}
    </update>
    <insert id="registUser" parameterType="com.springys.entity.User">
        INSERT INTO user (user.username,user.password,user.email,user.studentid) VALUES (#{user.username},#{user.password},#{user.email},#{user.studentid})
    </insert>
    <update id="updateLasttime">
        UPDATE user set user.lastlogintime=#{lastlogintime} where user.id=#{id}
    </update>
    <!--新闻模块-->
    <sql id="News">
        allnews.id as id,
        allnews.message as message,
        allnews.picturepath as picturepath,
        allnews.vediopath as vediopath,
        allnews.createtime as createtime,
        allnews.updatetime as updatetime,
        allnews.belong as belong,
        allnews.agreenum as agreenum,
        allnews.author as author,
        allnews.discussnum as discussnum,
        allnews.classifybelong as classifybelong,
        allnews.title as title,
        allnews.status as status,
        allnews.userstudentid as userstudentid,
        allnews.content_short as content_short,
        allnews.adviseindex as adviseindex,
        allnews.looknum as looknum
    </sql>
    <resultMap id="result_news" type="com.springys.entity.News">
        <id column="id" property="id"/>
        <result property="agreenum" column="agreenum"/>
        <result property="author" column="author"/>
        <result property="belong" column="belong"/>
        <result property="createtime" column="createtime"/>
        <result property="discussnum" column="discussnum"/>
        <result property="message" column="message"/>
        <result property="vediopath" column="vediopath"/>
        <result property="picturepath" column="picturepath"/>
        <result property="updatetime" column="updatetime"/>
        <result property="title" column="title"/>
        <result property="classifybelong" column="classifybelong"/>
        <result property="status" column="status"/>
        <result property="userstudentid" column="userstudentid"/>
        <result property="content_short" column="content_short"/>
        <result property="adviseindex" column="adviseindex"/>
        <result property="looknum" column="looknum"/>
    </resultMap>
    <select id="selectNews" parameterType="com.springys.Common.Assist"  resultMap="result_news">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
                <include refid="News" />
            </otherwise>
        </choose>
        from allnews
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM allnews
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                </choose>
                ) as tmp
                on tmp.primary_key=script.id
            </otherwise>
        </choose>
    </select>
    <!--增加新闻-->
    <insert id="insertNews" parameterType="com.springys.entity.News">
        INSERT  INTO allnews (allnews.message,allnews.picturepath,allnews.vediopath,allnews.belong,allnews.author,allnews.title,allnews.classifybelong,allnews.adviseindex,allnews.content_short,allnews.status,allnews.userstudentid,allnews.looknum) VALUES (#{news.message},#{news.picturepath},#{news.vediopath},#{news.belong},#{news.author},#{news.title},#{news.classifybelong},#{news.adviseindex},#{news.content_short},#{news.status},#{news.userstudentid},#{news.looknum})
    </insert>
    <!--增加用户新闻发布数量-->
    <update id="updateNewsnum" >
        update user set user.newsnum=user.newsnum+1 where user.studentid=#{studentid}
    </update>
    <delete id="deleteNews" parameterType="arraylist">
        DELETE FROM allnews WHERE id in
        <foreach collection="list" open="(" close=")" separator="," item="id" >
            #{id}
        </foreach>
    </delete>
    <select id="selectClassify" resultType="com.springys.entity.Classify">
        select * FROM  newsclassify
    </select>
    <!--头像修改-->
    <insert id="insertHead">
        INSERT INTO allnews (picturepath) VALUES (#{path}) where id= 4
    </insert>
</mapper>